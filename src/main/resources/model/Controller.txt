package #basePackage#.facade.impl;

import #basePackage#.domain.#className#;
import #basePackage#.domain.enums.UserModeEnum;
import #basePackage#.domain.example.#className#Example;
import #basePackage#.domain.params.#className#Parameter;
import #basePackage#.domain.params.SiteParameter;
import #basePackage#.domain.result.#className#Result;
import #basePackage#.domain.result.SiteResult;
import #basePackage#.facade.api.#className#Facade;
import #basePackage#.facade.api.dto.#className#Request;
import #basePackage#.facade.api.dto.#className#Response;
import #basePackage#.facade.api.dto.SiteResp;
import #basePackage#.facade.impl.convert.#className#Convert;
import #basePackage#.service.api.#className#Service;
import #basePackage#.service.api.SiteQueryService;
import com.nicetuan.basic.common.base.EnumUtil;
import com.nicetuan.basic.common.bean.CommonResultCode;
import com.nicetuan.basic.common.bean.Response;
import com.nicetuan.basic.common.bean.util.BeanUtils;
import com.nicetuan.basic.common.bean.util.ResponseUtils;
import com.nicetuan.basic.tool.context.UserContext;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * #tableComment#
 */
@RestController
@Slf4j
public class #className#Controller implements #className#Facade {
    @Autowired
    private #className#Service #alias#Service;

    @PostMapping(value = "/#alias#/pageList", consumes = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    @Override
    public Response<Map<String, Object>> pageList(@RequestBody #className#Request request) {
        #className#Example #alias#Example = #className#Convert.requestToExample(request);
        List<#className#> resultList = #alias#Service.get#className#ListForPage(#alias#Example);
        Map<String, Object> resultMap = new HashMap<>();
        resultMap.put("#alias#List", #className#Convert.domainToResponseList(resultList));
        addEnumValue(resultMap);
        return ResponseUtils.createSuccess(resultMap);
    }

    @PostMapping(value = "/#alias#/pageCount", consumes = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public Response<Integer> pageCount(@RequestBody #className#Request request) {
        #className#Example #alias#Example = #className#Convert.requestToExample(request);
        int count = #alias#Service.get#className#ListCount(#alias#Example);
        return ResponseUtils.createSuccess(count);
    }

    private void addEnumValue(Map<String, Object> resultMap) {
        
    }

    @ResponseBody
    @PostMapping(value = "/#alias#/getById", consumes = MediaType.APPLICATION_JSON_VALUE)
    @Override
    public Response<Map<String, Object>> get#className#ById(@RequestBody #className#Request request) {
        #className#Example #alias#Example = #className#Convert.requestToExample(request);
        #className# #alias# = #alias#Service.get#className#ById(#alias#Example);
        Map<String, Object> resultMap = new HashMap<>();
        resultMap.put("#alias#List",#className#Convert.domainToResponse(#alias#));
        addEnumValue(resultMap);
        return ResponseUtils.createSuccess(resultMap);
    }

    @ResponseBody
    @PostMapping(value = "/#alias#/toAdd", consumes = MediaType.APPLICATION_JSON_VALUE)
    public Response<Map<String,Object>> toAdd(){
        Map<String, Object> resultMap = new HashMap<>();
        addEnumValue(resultMap);
        return ResponseUtils.createSuccess(resultMap);
    }

    @ResponseBody
    @PostMapping(value = "/#alias#/saveAll", consumes = MediaType.APPLICATION_JSON_VALUE)
    @Override
    public Response saveAll(@RequestBody List<#className#Request> requestList) {
        #alias#Service.saveAll#className#(#className#Convert.requestToDomainList(requestList));
        return ResponseUtils.create(CommonResultCode.SUCCESS,"新增#tableComment#成功！");
    }

    @ResponseBody
    @PostMapping(value = "/#alias#/update", consumes = MediaType.APPLICATION_JSON_VALUE)
    @Override
    public Response update(@RequestBody #className#Request request) {
        #alias#Service.update#className#(#className#Convert.requestToDomain(request));
        return ResponseUtils.create(CommonResultCode.SUCCESS,"更新#tableComment#成功！");
    }

    @ResponseBody
    @PostMapping(value = "/#alias#/saveOne", consumes = MediaType.APPLICATION_JSON_VALUE)
    @Override
    public Response saveOne(@RequestBody #className#Request request) {
        #alias#Service.insert#className#(#className#Convert.requestToDomain(request));
        return ResponseUtils.create(CommonResultCode.SUCCESS,"更新#tableComment#成功！");
    }

}
