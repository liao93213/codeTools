package #basePackage#.manager.impl;

import #basePackage#.dao.api.#className#Dao;
import #basePackage#.domain.#className#;
import #basePackage#.domain.convert.#className#Convert;
import #basePackage#.domain.example.#className#Example;
import #basePackage#.domain.po.#className#PO;
import #basePackage#.domain.result.#className#Result;
import #basePackage#.manager.api.#className#Manager;
import com.nicetuan.basic.tool.context.UserContext;
import com.nicetuan.basic.tool.gid.KeyGenerator;
import com.nicetuan.basic.tool.log.LoggerUtils;
import groovy.util.logging.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.Date;
import java.util.List;

/**
 * #tableComment#
 * Created by liao on 2019/8/28.
 */
@Service
@Slf4j
public class #className#ManagerImpl implements #className#Manager {
    @Autowired
    private #className#Dao #alias#Dao;
    @Autowired
    private KeyGenerator gidGenerator;

    @Override
    public List<#className#> get#className#ListForPage(#className#Example #alias#Example) {
        return #alias#Dao.get#className#ListForPage(#alias#Example);
    }

    @Override
    public Integer get#className#ListCount(#className#Example #alias#Example) {
        return #alias#Dao.get#className#ListCount(#alias#Example);
    }

    @Override
    public int insert#className#(#className# #alias#) {
        #className#PO #alias#PO = #className#Convert.domainToPO(#alias#);
        return #alias#Dao.insert#className#(#alias#PO);
    }

    @Override
    public #className# get#className#ById(#className#Example #alias#Example) {
        return #alias#Dao.get#className#ById(#alias#Example);
    }

    /**
     * 更新#tableComment#
     * @param #alias#
     */
    @Override
    public int update#className#(#className# #alias#) {
        #className#PO #alias#PO = #className#Convert.domainToPO(#alias#);
        #alias#PO.set#className#Id(gidGenerator.generateKey().longValue());
        return #alias#Dao.update#className#(#alias#PO);
    }

    /**
     * 批量保存#tableComment#
     * @param #alias#List
     */
    @Override
    public void saveAll#className#(List<#className#> #alias#List) {
        List<#className#PO> #alias#POList = #className#Convert.domainToPOList(#alias#List);
        for (#className#PO #alias#PO : #alias#POList){
            #alias#PO.set#className#Id(gidGenerator.generateKey().longValue());
        }
        #alias#Dao.saveAll#className#(#alias#POList);
    }



}
